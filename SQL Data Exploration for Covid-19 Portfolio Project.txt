/*
Covid-19 SQL DATA EXPLORATION
Skills used: Joins, CTE's, Temp Tables, Aggregate Functions, Creating Views, Converting Data Types
*/

SELECT * FROM `portfolioproject-341819.Covid19.CovidDeaths`
ORDER BY 3,4 

SELECT * FROM `portfolioproject-341819.CovidVaccinations.CovidVaccinations` 
ORDER BY 3,4

---Select Data that we going to be using

SELECT location,date, total_cases, new_cases, total_deaths,population
From `portfolioproject-341819.Covid19.CovidDeaths`
order by 1,2

--Looking at Total Cases vs Total Deaths

SELECT location,date, total_cases,total_deaths,(total_deaths/total_cases)*100 as DeathPercentage
From `portfolioproject-341819.Covid19.CovidDeaths`
order by 1,2

--Looking at the Total Cases vs Population
--Shows percentage of population that got covid

SELECT location,date, total_cases,population,(total_cases/population)*100 as PercentPopulationInfected
From `portfolioproject-341819.Covid19.CovidDeaths`
where location like '%Germany%'
order by 1,2

--Looking at countries with highest infection rate compared to population

SELECT location, population, MAX(total_cases) as HighestInfectionCount,MAX(total_cases/population)*100 as PercentPopulationInfected
From portfolioproject-341819.Covid19.CovidDeaths
GROUP BY location, population
order by PercentPopulationInfected desc 

--Showing Countries with Highest Death Count per population

--First we break it down by continent

SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
From portfolioproject-341819.Covid19.CovidDeaths
Where continent is null 
GROUP BY location
order by TotalDeathCount desc 





--Showing continents with the highest death count per population

SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
From portfolioproject-341819.Covid19.CovidDeaths
Where continent is null 
GROUP BY location
order by TotalDeathCount desc 

--Showing continents with the highest death count per population

SELECT continent, MAX(cast(total_deaths as int)) as TotalDeathCount
From portfolioproject-341819.Covid19.CovidDeaths
Where continent is not null 
GROUP BY continent
order by TotalDeathCount desc 

-- BREAKING THINGS DOWN BY CONTINENT

--Global numbers

SELECT date, SUM(new_cases) as total_cases,SUM(cast(new_deaths as int)) as total_deaths,SUM(cast(new_deaths as int))/SUM(new_cases) as DeathPercentage
From `portfolioproject-341819.Covid19.CovidDeaths`
--Where location like '%states%'
Where continent is not null
Group by date 
order by 1,2

--Looking at Total Population vs Vaccinated
-- Shows Percentage of Population that has received at least one Covid Vaccination

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location Order by dea.location, dea.date) as RollingPeopleVaccinated
FROM `portfolioproject-341819.CovidVaccinations.CovidVaccinations` vac
join `portfolioproject-341819.Covid19.CovidDeaths` dea
on dea.location = vac.location
and dea.date =vac.date 
where dea.continent is not null
order by 2,3

--Use CTE to perform Calculation on Partition By in previous query

With PopvsVac (continent, location,date, population, new_vaccinations,RolliningPeopleVaccinated)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION BY dea.location Order by dea.location, dea.date) as RollingPeopleVaccinated
FROM `portfolioproject-341819.CovidVaccinations.CovidVaccinations` vac
join `portfolioproject-341819.Covid19.CovidDeaths` dea
on dea.location = vac.location
and dea.date = vac.date 
where dea.continent is not null
--order by 2,3
)
SELECT *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

--Temp table

DROP TABLE IF EXISTS #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
    Continent nvarchar(255),
    Location nvarchar(255),
    Date datetime,
    Population numeric,
    New_vaccinations numeric,
    RollingPeopleVaccinated numeric
)
INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location Order by dea.location, dea.date) as RollingPeopleVaccinated
FROM `portfolioproject-341819.CovidVaccinations.CovidVaccinations` vac
join `portfolioproject-341819.Covid19.CovidDeaths` dea
on dea.location = vac.location
and dea.date =vac.date 
--where dea.continent is not null
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated

--Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location Order by dea.location, dea.date) as RollingPeopleVaccinated
FROM `portfolioproject-341819.CovidVaccinations.CovidVaccinations` vac
join `portfolioproject-341819.Covid19.CovidDeaths` dea
on dea.location = vac.location
and dea.date =vac.date 
where dea.continent is not null
--order by 2,3
